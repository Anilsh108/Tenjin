name: Execute Test Run
 
on:
  push:
    branches:
      - main
 
jobs:
  execute-test-run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
 
      - name: Install curl
        run: sudo apt-get install -y curl
 
      - name: Execute test run
        env:
          IPADDR: 'http://a0ee39402c50b4ef481304273a6c89b7-870011787.ap-south-1.elb.amazonaws.com'
          INSID: 'yethi-test'
          APITOKEN: 'QjE9tTrKWL05gXTs81nebyPorhUfszQambJ9KJ5fG/w0hWSO5AkRkrgjDxxQZyRygajo1EzrmPGui18oK3ooCIwJJmDXJ6J4wBdPBrRXkfwnFunpOvySH32QjUs6xdtZLkZwECHyG0Yt4TbNwe8bnbOvftM9OPrb5DB5n3gRrBQSlH4RP1HVuwhbwc19mynLsXa8LOGfB6/VlI3ZsLe61lBr9IsZBEGN1lgA8tCR5bGhE4PqrnybuUh8KKGy+1y8rh2Nh5zcCLmpQ7/QE5edLXWP6XvA7ixi03Z52ubLtHtk1MVgUINmG1WSdCUZofqyg83xcXtcMCgu8fTU0HhKUw=='
          AGENTNAME: 'SHALINI PRE'
          INCLUDECLOUDDEVICE: 'FALSE'
          INCLUDECLOUDBROWSER: 'FALSE'
          DEVICENAME: ''
          PROJECTKEY: 'R39'
          BROWSER: 'chrome'
          REGION: 'UTC+05:30'
          TESTRUNID: 'Test-Run-4828578'
          ISCLOUDAGENT: 'FALSE'
          BROWSERVERSION: ''
          OS: ''
          RUNONLYFAILED: 'FALSE'
        run: |
          EXECUTE=$(curl -s -k --request POST "$IPADDR/api/rest/1/execute/testrun" \
            --header 'Content-Type: application/json' \
            --header "X-INS-ID: $INSID" \
            --header "X-API-TOKEN: $APITOKEN" \
            --data-raw '{
                   "agentName": "'"$AGENTNAME"'",
                   "includeCloudDevice": "'"$INCLUDECLOUDDEVICE"'",
                   "includeCloudBrowser": "'"$INCLUDECLOUDBROWSER"'",
                   "device": "'"$DEVICENAME"'",
                   "projectKey": "'"$PROJECTKEY"'",
                   "browser": "'"$BROWSER"'",
                   "region": "'"$REGION"'",
                   "testRunId": "'"$TESTRUNID"'",
                   "cloudAgent": "'"$ISCLOUDAGENT"'",
                   "browserVersion": "'"$BROWSERVERSION"'",
                   "os": "'"$OS"'",
                   "reRunFailedCases": "'"$RUNONLYFAILED"'"
                   }')
          echo "EXECUTE: $EXECUTE"       
          value=$(echo $EXECUTE | jq -r '.testRunId')
          echo "Test Run ID: $value"      
 
      - name: Monitor test run status
        run: |
          status=''
          agentstatus=''
          response=''
          result=''
          count=0
          end_time=$(($(date +%s) + 3600)) # One hour timeout
          while [[ $status != 'COMPLETED' && $agentstatus != 'TERMINATED' && $agentstatus != 'ERROR' && $(date +%s) -lt $end_time ]]; do
              response=$(curl -s -k --request GET "$IPADDR/api/rest/1/testruns/$value/runstatus" \
                --header 'Content-Type: application/json' \
                --header "X-INS-ID: $INSID" \
                --header "X-API-TOKEN: $APITOKEN")
              status=$(echo $response | jq -r '.status')
              result=$(echo $response | jq -r '.result')
              agentstatus=$(echo $response | jq -r '.cloudAgentStatus')
              echo "inloop status $response \n $status"
              sleep 20
              count=$((count+1))
              if [[ $result == 'FAIL' || $status == 'null' ]]; then
                  echo "Result status is $result"
                  exit 1
              else
                  echo "Result status is $result"
              fi
          done
